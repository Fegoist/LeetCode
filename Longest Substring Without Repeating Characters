package LongSubStr;

public class Solution
{
    public int lengthOfLongestSubstring(String s)
    {
        int subHead = 0;
        int checkPos = 0;

        //String subCur = new String("");

        if (s.length() == 0)
        {
            return 0;
        }
        int subLenMax = 1;

        while (subHead <= s.length() - 1 && checkPos <= s.length() - 1)
        {
            String subCur = s.substring(subHead, subHead + 1);
            checkPos = subHead + 1;

            //System.out.println("sub starts with:    " + subCur);
            //System.out.println("check starts with:    " + s.substring(checkPos, checkPos + 1));

            int letterPosInSub = -1;

            while (letterPosInSub == -1 && checkPos <= s.length() - 1)
            {
                String checkLetter = s.substring(checkPos, checkPos + 1);
                letterPosInSub = subCur.indexOf(checkLetter);

                if (letterPosInSub == -1)
                {
                    //letter not find in current substr
                    //System.out.println('0');
                    subCur = subCur.concat(checkLetter);
                    subLenMax = (subCur.length() > subLenMax) ? subCur.length() : subLenMax;
                    checkPos++;

                } else
                {
                    //letter find at letterPosInSub
                    //System.out.println('1');
                    subLenMax = (subCur.length() > subLenMax) ? subCur.length() : subLenMax;
                    subHead = subHead + letterPosInSub + 1;
                }
            }
        }
        return subLenMax;
    }
}
